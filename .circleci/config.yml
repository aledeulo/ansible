version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} && \
            echo "CloudFormation stack cleaning has being triggered. Please check!"

jobs:
  
  create_aws_infrastructure:
    working_directory: ~/project_<< pipeline.number >>
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout      
      - run: 
          name: Create CloudFormation services
          command: |
             aws cloudformation deploy \
                --template-file ./deploy_cloud_formation/cf_templates/resources.yml \
                --stack-name services-stack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
      - run: | 
          echo "[ec2-instances]" > inventory && \
          aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text >> inventory 
      - run: |
          yum install -y tar gzip && \
          mv inventory ./inventory

      - attach_workspace:
          at: ~/project_<< pipeline.number >>

      - persist_to_workspace:
          root: ~/project_<< pipeline.number >>
          paths:
            - ./
      - destroy_environment

  run-ansible_playbooks:
    working_directory: ~/project_<< pipeline.number >>
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["ea:43:42:b3:40:5f:88:9b:e5:a5:53:6a:9b:d6:2b:64"]
      - attach_workspace:
          at: ~/project_<< pipeline.number >>
      - run: 
          name: Install dependencies
          command: apk add --update ansible
      - run:
          name: Run ansible playbook
          command: |
            ls -l && sudo ansible-playbook -i inventory main-remote.yml
      - destroy_environment

workflows:
  deploy-infrastructure-workflow:
    jobs:
      - create_aws_infrastructure
      - run-ansible_playbooks:
          requires:
            - create_aws_infrastructure
